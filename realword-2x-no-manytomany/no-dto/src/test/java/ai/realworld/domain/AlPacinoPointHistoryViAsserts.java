package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPacinoPointHistoryViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoPointHistoryViAllPropertiesEquals(AlPacinoPointHistoryVi expected, AlPacinoPointHistoryVi actual) {
        assertAlPacinoPointHistoryViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPacinoPointHistoryViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoPointHistoryViAllUpdatablePropertiesEquals(
        AlPacinoPointHistoryVi expected,
        AlPacinoPointHistoryVi actual
    ) {
        assertAlPacinoPointHistoryViUpdatableFieldsEquals(expected, actual);
        assertAlPacinoPointHistoryViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoPointHistoryViAutoGeneratedPropertiesEquals(
        AlPacinoPointHistoryVi expected,
        AlPacinoPointHistoryVi actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoPointHistoryVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoPointHistoryViUpdatableFieldsEquals(AlPacinoPointHistoryVi expected, AlPacinoPointHistoryVi actual) {
        assertThat(expected)
            .as("Verify AlPacinoPointHistoryVi relevant properties")
            .satisfies(e -> assertThat(e.getSource()).as("check source").isEqualTo(actual.getSource()))
            .satisfies(e -> assertThat(e.getAssociatedId()).as("check associatedId").isEqualTo(actual.getAssociatedId()))
            .satisfies(e -> assertThat(e.getPointAmount()).as("check pointAmount").isEqualTo(actual.getPointAmount()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoPointHistoryViUpdatableRelationshipsEquals(
        AlPacinoPointHistoryVi expected,
        AlPacinoPointHistoryVi actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoPointHistoryVi relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
