package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPyuThomasWayneAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPyuThomasWayneAllPropertiesEquals(AlPyuThomasWayne expected, AlPyuThomasWayne actual) {
        assertAlPyuThomasWayneAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPyuThomasWayneAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPyuThomasWayneAllUpdatablePropertiesEquals(AlPyuThomasWayne expected, AlPyuThomasWayne actual) {
        assertAlPyuThomasWayneUpdatableFieldsEquals(expected, actual);
        assertAlPyuThomasWayneUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPyuThomasWayneAutoGeneratedPropertiesEquals(AlPyuThomasWayne expected, AlPyuThomasWayne actual) {
        assertThat(expected)
            .as("Verify AlPyuThomasWayne auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPyuThomasWayneUpdatableFieldsEquals(AlPyuThomasWayne expected, AlPyuThomasWayne actual) {
        assertThat(expected)
            .as("Verify AlPyuThomasWayne relevant properties")
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()))
            .satisfies(e -> assertThat(e.getComment()).as("check comment").isEqualTo(actual.getComment()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPyuThomasWayneUpdatableRelationshipsEquals(AlPyuThomasWayne expected, AlPyuThomasWayne actual) {
        assertThat(expected)
            .as("Verify AlPyuThomasWayne relationships")
            .satisfies(e -> assertThat(e.getBooking()).as("check booking").isEqualTo(actual.getBooking()));
    }
}
