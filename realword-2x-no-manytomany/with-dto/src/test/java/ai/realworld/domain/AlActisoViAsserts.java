package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlActisoViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoViAllPropertiesEquals(AlActisoVi expected, AlActisoVi actual) {
        assertAlActisoViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlActisoViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoViAllUpdatablePropertiesEquals(AlActisoVi expected, AlActisoVi actual) {
        assertAlActisoViUpdatableFieldsEquals(expected, actual);
        assertAlActisoViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoViAutoGeneratedPropertiesEquals(AlActisoVi expected, AlActisoVi actual) {
        assertThat(expected)
            .as("Verify AlActisoVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoViUpdatableFieldsEquals(AlActisoVi expected, AlActisoVi actual) {
        assertThat(expected)
            .as("Verify AlActisoVi relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getValueJason()).as("check valueJason").isEqualTo(actual.getValueJason()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoViUpdatableRelationshipsEquals(AlActisoVi expected, AlActisoVi actual) {
        assertThat(expected)
            .as("Verify AlActisoVi relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
