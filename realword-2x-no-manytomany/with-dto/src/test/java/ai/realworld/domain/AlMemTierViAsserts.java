package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlMemTierViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierViAllPropertiesEquals(AlMemTierVi expected, AlMemTierVi actual) {
        assertAlMemTierViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlMemTierViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierViAllUpdatablePropertiesEquals(AlMemTierVi expected, AlMemTierVi actual) {
        assertAlMemTierViUpdatableFieldsEquals(expected, actual);
        assertAlMemTierViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierViAutoGeneratedPropertiesEquals(AlMemTierVi expected, AlMemTierVi actual) {
        assertThat(expected)
            .as("Verify AlMemTierVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierViUpdatableFieldsEquals(AlMemTierVi expected, AlMemTierVi actual) {
        assertThat(expected)
            .as("Verify AlMemTierVi relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getMinPoint()).as("check minPoint").isEqualTo(actual.getMinPoint()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierViUpdatableRelationshipsEquals(AlMemTierVi expected, AlMemTierVi actual) {
        assertThat(expected)
            .as("Verify AlMemTierVi relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
