package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlLexFergViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlLexFergViAllPropertiesEquals(AlLexFergVi expected, AlLexFergVi actual) {
        assertAlLexFergViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlLexFergViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlLexFergViAllUpdatablePropertiesEquals(AlLexFergVi expected, AlLexFergVi actual) {
        assertAlLexFergViUpdatableFieldsEquals(expected, actual);
        assertAlLexFergViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlLexFergViAutoGeneratedPropertiesEquals(AlLexFergVi expected, AlLexFergVi actual) {
        assertThat(expected)
            .as("Verify AlLexFergVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlLexFergViUpdatableFieldsEquals(AlLexFergVi expected, AlLexFergVi actual) {
        assertThat(expected)
            .as("Verify AlLexFergVi relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getSlug()).as("check slug").isEqualTo(actual.getSlug()))
            .satisfies(e -> assertThat(e.getSummary()).as("check summary").isEqualTo(actual.getSummary()))
            .satisfies(e -> assertThat(e.getContentHeitiga()).as("check contentHeitiga").isEqualTo(actual.getContentHeitiga()))
            .satisfies(e -> assertThat(e.getPublicationStatus()).as("check publicationStatus").isEqualTo(actual.getPublicationStatus()))
            .satisfies(e -> assertThat(e.getPublishedDate()).as("check publishedDate").isEqualTo(actual.getPublishedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlLexFergViUpdatableRelationshipsEquals(AlLexFergVi expected, AlLexFergVi actual) {
        // empty method
    }
}
