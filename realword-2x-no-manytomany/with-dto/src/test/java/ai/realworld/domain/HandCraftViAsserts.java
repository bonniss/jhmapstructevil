package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HandCraftViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHandCraftViAllPropertiesEquals(HandCraftVi expected, HandCraftVi actual) {
        assertHandCraftViAutoGeneratedPropertiesEquals(expected, actual);
        assertHandCraftViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHandCraftViAllUpdatablePropertiesEquals(HandCraftVi expected, HandCraftVi actual) {
        assertHandCraftViUpdatableFieldsEquals(expected, actual);
        assertHandCraftViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHandCraftViAutoGeneratedPropertiesEquals(HandCraftVi expected, HandCraftVi actual) {
        assertThat(expected)
            .as("Verify HandCraftVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHandCraftViUpdatableFieldsEquals(HandCraftVi expected, HandCraftVi actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHandCraftViUpdatableRelationshipsEquals(HandCraftVi expected, HandCraftVi actual) {
        assertThat(expected)
            .as("Verify HandCraftVi relationships")
            .satisfies(e -> assertThat(e.getAgent()).as("check agent").isEqualTo(actual.getAgent()))
            .satisfies(e -> assertThat(e.getRole()).as("check role").isEqualTo(actual.getRole()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
