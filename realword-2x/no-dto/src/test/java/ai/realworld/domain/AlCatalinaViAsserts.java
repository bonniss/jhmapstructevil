package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlCatalinaViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaViAllPropertiesEquals(AlCatalinaVi expected, AlCatalinaVi actual) {
        assertAlCatalinaViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlCatalinaViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaViAllUpdatablePropertiesEquals(AlCatalinaVi expected, AlCatalinaVi actual) {
        assertAlCatalinaViUpdatableFieldsEquals(expected, actual);
        assertAlCatalinaViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaViAutoGeneratedPropertiesEquals(AlCatalinaVi expected, AlCatalinaVi actual) {
        assertThat(expected)
            .as("Verify AlCatalinaVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaViUpdatableFieldsEquals(AlCatalinaVi expected, AlCatalinaVi actual) {
        assertThat(expected)
            .as("Verify AlCatalinaVi relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getTreeDepth()).as("check treeDepth").isEqualTo(actual.getTreeDepth()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaViUpdatableRelationshipsEquals(AlCatalinaVi expected, AlCatalinaVi actual) {
        assertThat(expected)
            .as("Verify AlCatalinaVi relationships")
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()))
            .satisfies(e -> assertThat(e.getAvatar()).as("check avatar").isEqualTo(actual.getAvatar()));
    }
}
