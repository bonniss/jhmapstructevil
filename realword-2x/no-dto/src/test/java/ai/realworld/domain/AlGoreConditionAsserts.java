package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlGoreConditionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlGoreConditionAllPropertiesEquals(AlGoreCondition expected, AlGoreCondition actual) {
        assertAlGoreConditionAutoGeneratedPropertiesEquals(expected, actual);
        assertAlGoreConditionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlGoreConditionAllUpdatablePropertiesEquals(AlGoreCondition expected, AlGoreCondition actual) {
        assertAlGoreConditionUpdatableFieldsEquals(expected, actual);
        assertAlGoreConditionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlGoreConditionAutoGeneratedPropertiesEquals(AlGoreCondition expected, AlGoreCondition actual) {
        assertThat(expected)
            .as("Verify AlGoreCondition auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlGoreConditionUpdatableFieldsEquals(AlGoreCondition expected, AlGoreCondition actual) {
        assertThat(expected)
            .as("Verify AlGoreCondition relevant properties")
            .satisfies(e -> assertThat(e.getSubjectType()).as("check subjectType").isEqualTo(actual.getSubjectType()))
            .satisfies(e -> assertThat(e.getSubject()).as("check subject").isEqualTo(actual.getSubject()))
            .satisfies(e -> assertThat(e.getAction()).as("check action").isEqualTo(actual.getAction()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlGoreConditionUpdatableRelationshipsEquals(AlGoreCondition expected, AlGoreCondition actual) {
        assertThat(expected)
            .as("Verify AlGoreCondition relationships")
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
