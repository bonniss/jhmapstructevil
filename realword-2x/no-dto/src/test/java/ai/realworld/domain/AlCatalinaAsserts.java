package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlCatalinaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaAllPropertiesEquals(AlCatalina expected, AlCatalina actual) {
        assertAlCatalinaAutoGeneratedPropertiesEquals(expected, actual);
        assertAlCatalinaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaAllUpdatablePropertiesEquals(AlCatalina expected, AlCatalina actual) {
        assertAlCatalinaUpdatableFieldsEquals(expected, actual);
        assertAlCatalinaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaAutoGeneratedPropertiesEquals(AlCatalina expected, AlCatalina actual) {
        assertThat(expected)
            .as("Verify AlCatalina auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaUpdatableFieldsEquals(AlCatalina expected, AlCatalina actual) {
        assertThat(expected)
            .as("Verify AlCatalina relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getTreeDepth()).as("check treeDepth").isEqualTo(actual.getTreeDepth()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlCatalinaUpdatableRelationshipsEquals(AlCatalina expected, AlCatalina actual) {
        assertThat(expected)
            .as("Verify AlCatalina relationships")
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()))
            .satisfies(e -> assertThat(e.getAvatar()).as("check avatar").isEqualTo(actual.getAvatar()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
