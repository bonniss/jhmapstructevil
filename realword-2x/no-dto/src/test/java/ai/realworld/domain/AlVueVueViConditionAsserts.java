package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlVueVueViConditionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueViConditionAllPropertiesEquals(AlVueVueViCondition expected, AlVueVueViCondition actual) {
        assertAlVueVueViConditionAutoGeneratedPropertiesEquals(expected, actual);
        assertAlVueVueViConditionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueViConditionAllUpdatablePropertiesEquals(AlVueVueViCondition expected, AlVueVueViCondition actual) {
        assertAlVueVueViConditionUpdatableFieldsEquals(expected, actual);
        assertAlVueVueViConditionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueViConditionAutoGeneratedPropertiesEquals(AlVueVueViCondition expected, AlVueVueViCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueViCondition auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueViConditionUpdatableFieldsEquals(AlVueVueViCondition expected, AlVueVueViCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueViCondition relevant properties")
            .satisfies(e -> assertThat(e.getSubjectType()).as("check subjectType").isEqualTo(actual.getSubjectType()))
            .satisfies(e -> assertThat(e.getSubject()).as("check subject").isEqualTo(actual.getSubject()))
            .satisfies(e -> assertThat(e.getAction()).as("check action").isEqualTo(actual.getAction()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueViConditionUpdatableRelationshipsEquals(AlVueVueViCondition expected, AlVueVueViCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueViCondition relationships")
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
