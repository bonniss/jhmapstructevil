package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPacinoAndreiRightHandViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandViAllPropertiesEquals(
        AlPacinoAndreiRightHandVi expected,
        AlPacinoAndreiRightHandVi actual
    ) {
        assertAlPacinoAndreiRightHandViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPacinoAndreiRightHandViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandViAllUpdatablePropertiesEquals(
        AlPacinoAndreiRightHandVi expected,
        AlPacinoAndreiRightHandVi actual
    ) {
        assertAlPacinoAndreiRightHandViUpdatableFieldsEquals(expected, actual);
        assertAlPacinoAndreiRightHandViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandViAutoGeneratedPropertiesEquals(
        AlPacinoAndreiRightHandVi expected,
        AlPacinoAndreiRightHandVi actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHandVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandViUpdatableFieldsEquals(
        AlPacinoAndreiRightHandVi expected,
        AlPacinoAndreiRightHandVi actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHandVi relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getIsDefault()).as("check isDefault").isEqualTo(actual.getIsDefault()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandViUpdatableRelationshipsEquals(
        AlPacinoAndreiRightHandVi expected,
        AlPacinoAndreiRightHandVi actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHandVi relationships")
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()));
    }
}
