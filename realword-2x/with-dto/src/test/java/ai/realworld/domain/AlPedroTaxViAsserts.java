package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPedroTaxViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPedroTaxViAllPropertiesEquals(AlPedroTaxVi expected, AlPedroTaxVi actual) {
        assertAlPedroTaxViAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPedroTaxViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPedroTaxViAllUpdatablePropertiesEquals(AlPedroTaxVi expected, AlPedroTaxVi actual) {
        assertAlPedroTaxViUpdatableFieldsEquals(expected, actual);
        assertAlPedroTaxViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPedroTaxViAutoGeneratedPropertiesEquals(AlPedroTaxVi expected, AlPedroTaxVi actual) {
        assertThat(expected)
            .as("Verify AlPedroTaxVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPedroTaxViUpdatableFieldsEquals(AlPedroTaxVi expected, AlPedroTaxVi actual) {
        assertThat(expected)
            .as("Verify AlPedroTaxVi relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getWeight()).as("check weight").isEqualTo(actual.getWeight()))
            .satisfies(e -> assertThat(e.getPropertyType()).as("check propertyType").isEqualTo(actual.getPropertyType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPedroTaxViUpdatableRelationshipsEquals(AlPedroTaxVi expected, AlPedroTaxVi actual) {
        assertThat(expected)
            .as("Verify AlPedroTaxVi relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
