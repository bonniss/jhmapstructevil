package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPounderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPounderAllPropertiesEquals(AlPounder expected, AlPounder actual) {
        assertAlPounderAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPounderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPounderAllUpdatablePropertiesEquals(AlPounder expected, AlPounder actual) {
        assertAlPounderUpdatableFieldsEquals(expected, actual);
        assertAlPounderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPounderAutoGeneratedPropertiesEquals(AlPounder expected, AlPounder actual) {
        assertThat(expected)
            .as("Verify AlPounder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPounderUpdatableFieldsEquals(AlPounder expected, AlPounder actual) {
        assertThat(expected)
            .as("Verify AlPounder relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getWeight()).as("check weight").isEqualTo(actual.getWeight()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPounderUpdatableRelationshipsEquals(AlPounder expected, AlPounder actual) {
        assertThat(expected)
            .as("Verify AlPounder relationships")
            .satisfies(e -> assertThat(e.getAttributeTaxonomy()).as("check attributeTaxonomy").isEqualTo(actual.getAttributeTaxonomy()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
