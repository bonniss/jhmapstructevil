package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlVueVueConditionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueConditionAllPropertiesEquals(AlVueVueCondition expected, AlVueVueCondition actual) {
        assertAlVueVueConditionAutoGeneratedPropertiesEquals(expected, actual);
        assertAlVueVueConditionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueConditionAllUpdatablePropertiesEquals(AlVueVueCondition expected, AlVueVueCondition actual) {
        assertAlVueVueConditionUpdatableFieldsEquals(expected, actual);
        assertAlVueVueConditionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueConditionAutoGeneratedPropertiesEquals(AlVueVueCondition expected, AlVueVueCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueCondition auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueConditionUpdatableFieldsEquals(AlVueVueCondition expected, AlVueVueCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueCondition relevant properties")
            .satisfies(e -> assertThat(e.getSubjectType()).as("check subjectType").isEqualTo(actual.getSubjectType()))
            .satisfies(e -> assertThat(e.getSubject()).as("check subject").isEqualTo(actual.getSubject()))
            .satisfies(e -> assertThat(e.getAction()).as("check action").isEqualTo(actual.getAction()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlVueVueConditionUpdatableRelationshipsEquals(AlVueVueCondition expected, AlVueVueCondition actual) {
        assertThat(expected)
            .as("Verify AlVueVueCondition relationships")
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()))
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
