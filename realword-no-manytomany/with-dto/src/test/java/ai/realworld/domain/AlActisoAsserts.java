package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlActisoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoAllPropertiesEquals(AlActiso expected, AlActiso actual) {
        assertAlActisoAutoGeneratedPropertiesEquals(expected, actual);
        assertAlActisoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoAllUpdatablePropertiesEquals(AlActiso expected, AlActiso actual) {
        assertAlActisoUpdatableFieldsEquals(expected, actual);
        assertAlActisoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoAutoGeneratedPropertiesEquals(AlActiso expected, AlActiso actual) {
        assertThat(expected)
            .as("Verify AlActiso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoUpdatableFieldsEquals(AlActiso expected, AlActiso actual) {
        assertThat(expected)
            .as("Verify AlActiso relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getValueJason()).as("check valueJason").isEqualTo(actual.getValueJason()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlActisoUpdatableRelationshipsEquals(AlActiso expected, AlActiso actual) {
        assertThat(expected)
            .as("Verify AlActiso relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
