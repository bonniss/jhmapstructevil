package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlMemTierAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierAllPropertiesEquals(AlMemTier expected, AlMemTier actual) {
        assertAlMemTierAutoGeneratedPropertiesEquals(expected, actual);
        assertAlMemTierAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierAllUpdatablePropertiesEquals(AlMemTier expected, AlMemTier actual) {
        assertAlMemTierUpdatableFieldsEquals(expected, actual);
        assertAlMemTierUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierAutoGeneratedPropertiesEquals(AlMemTier expected, AlMemTier actual) {
        assertThat(expected)
            .as("Verify AlMemTier auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierUpdatableFieldsEquals(AlMemTier expected, AlMemTier actual) {
        assertThat(expected)
            .as("Verify AlMemTier relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getMinPoint()).as("check minPoint").isEqualTo(actual.getMinPoint()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlMemTierUpdatableRelationshipsEquals(AlMemTier expected, AlMemTier actual) {
        assertThat(expected)
            .as("Verify AlMemTier relationships")
            .satisfies(e -> assertThat(e.getApplication()).as("check application").isEqualTo(actual.getApplication()));
    }
}
