package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NextShipmentViViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViViAllPropertiesEquals(NextShipmentViVi expected, NextShipmentViVi actual) {
        assertNextShipmentViViAutoGeneratedPropertiesEquals(expected, actual);
        assertNextShipmentViViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViViAllUpdatablePropertiesEquals(NextShipmentViVi expected, NextShipmentViVi actual) {
        assertNextShipmentViViUpdatableFieldsEquals(expected, actual);
        assertNextShipmentViViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViViAutoGeneratedPropertiesEquals(NextShipmentViVi expected, NextShipmentViVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentViVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViViUpdatableFieldsEquals(NextShipmentViVi expected, NextShipmentViVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentViVi relevant properties")
            .satisfies(e -> assertThat(e.getTrackingNumber()).as("check trackingNumber").isEqualTo(actual.getTrackingNumber()))
            .satisfies(e -> assertThat(e.getShippedDate()).as("check shippedDate").isEqualTo(actual.getShippedDate()))
            .satisfies(e -> assertThat(e.getDeliveryDate()).as("check deliveryDate").isEqualTo(actual.getDeliveryDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViViUpdatableRelationshipsEquals(NextShipmentViVi expected, NextShipmentViVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentViVi relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
