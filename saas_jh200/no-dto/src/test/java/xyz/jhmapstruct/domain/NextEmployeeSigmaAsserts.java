package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NextEmployeeSigmaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextEmployeeSigmaAllPropertiesEquals(NextEmployeeSigma expected, NextEmployeeSigma actual) {
        assertNextEmployeeSigmaAutoGeneratedPropertiesEquals(expected, actual);
        assertNextEmployeeSigmaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextEmployeeSigmaAllUpdatablePropertiesEquals(NextEmployeeSigma expected, NextEmployeeSigma actual) {
        assertNextEmployeeSigmaUpdatableFieldsEquals(expected, actual);
        assertNextEmployeeSigmaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextEmployeeSigmaAutoGeneratedPropertiesEquals(NextEmployeeSigma expected, NextEmployeeSigma actual) {
        assertThat(expected)
            .as("Verify NextEmployeeSigma auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextEmployeeSigmaUpdatableFieldsEquals(NextEmployeeSigma expected, NextEmployeeSigma actual) {
        assertThat(expected)
            .as("Verify NextEmployeeSigma relevant properties")
            .satisfies(e -> assertThat(e.getFirstName()).as("check firstName").isEqualTo(actual.getFirstName()))
            .satisfies(e -> assertThat(e.getLastName()).as("check lastName").isEqualTo(actual.getLastName()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getHireDate()).as("check hireDate").isEqualTo(actual.getHireDate()))
            .satisfies(e -> assertThat(e.getPosition()).as("check position").isEqualTo(actual.getPosition()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextEmployeeSigmaUpdatableRelationshipsEquals(NextEmployeeSigma expected, NextEmployeeSigma actual) {
        assertThat(expected)
            .as("Verify NextEmployeeSigma relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
