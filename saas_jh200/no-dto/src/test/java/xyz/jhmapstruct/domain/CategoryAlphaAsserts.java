package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CategoryAlphaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryAlphaAllPropertiesEquals(CategoryAlpha expected, CategoryAlpha actual) {
        assertCategoryAlphaAutoGeneratedPropertiesEquals(expected, actual);
        assertCategoryAlphaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryAlphaAllUpdatablePropertiesEquals(CategoryAlpha expected, CategoryAlpha actual) {
        assertCategoryAlphaUpdatableFieldsEquals(expected, actual);
        assertCategoryAlphaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryAlphaAutoGeneratedPropertiesEquals(CategoryAlpha expected, CategoryAlpha actual) {
        assertThat(expected)
            .as("Verify CategoryAlpha auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryAlphaUpdatableFieldsEquals(CategoryAlpha expected, CategoryAlpha actual) {
        assertThat(expected)
            .as("Verify CategoryAlpha relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCategoryAlphaUpdatableRelationshipsEquals(CategoryAlpha expected, CategoryAlpha actual) {
        assertThat(expected)
            .as("Verify CategoryAlpha relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
