package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NextShipmentViAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViAllPropertiesEquals(NextShipmentVi expected, NextShipmentVi actual) {
        assertNextShipmentViAutoGeneratedPropertiesEquals(expected, actual);
        assertNextShipmentViAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViAllUpdatablePropertiesEquals(NextShipmentVi expected, NextShipmentVi actual) {
        assertNextShipmentViUpdatableFieldsEquals(expected, actual);
        assertNextShipmentViUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViAutoGeneratedPropertiesEquals(NextShipmentVi expected, NextShipmentVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentVi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViUpdatableFieldsEquals(NextShipmentVi expected, NextShipmentVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentVi relevant properties")
            .satisfies(e -> assertThat(e.getTrackingNumber()).as("check trackingNumber").isEqualTo(actual.getTrackingNumber()))
            .satisfies(e -> assertThat(e.getShippedDate()).as("check shippedDate").isEqualTo(actual.getShippedDate()))
            .satisfies(e -> assertThat(e.getDeliveryDate()).as("check deliveryDate").isEqualTo(actual.getDeliveryDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextShipmentViUpdatableRelationshipsEquals(NextShipmentVi expected, NextShipmentVi actual) {
        assertThat(expected)
            .as("Verify NextShipmentVi relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
