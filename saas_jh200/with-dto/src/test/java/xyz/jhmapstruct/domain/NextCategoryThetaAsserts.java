package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NextCategoryThetaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryThetaAllPropertiesEquals(NextCategoryTheta expected, NextCategoryTheta actual) {
        assertNextCategoryThetaAutoGeneratedPropertiesEquals(expected, actual);
        assertNextCategoryThetaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryThetaAllUpdatablePropertiesEquals(NextCategoryTheta expected, NextCategoryTheta actual) {
        assertNextCategoryThetaUpdatableFieldsEquals(expected, actual);
        assertNextCategoryThetaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryThetaAutoGeneratedPropertiesEquals(NextCategoryTheta expected, NextCategoryTheta actual) {
        assertThat(expected)
            .as("Verify NextCategoryTheta auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryThetaUpdatableFieldsEquals(NextCategoryTheta expected, NextCategoryTheta actual) {
        assertThat(expected)
            .as("Verify NextCategoryTheta relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryThetaUpdatableRelationshipsEquals(NextCategoryTheta expected, NextCategoryTheta actual) {
        assertThat(expected)
            .as("Verify NextCategoryTheta relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
