package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NextCategoryMiMiAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryMiMiAllPropertiesEquals(NextCategoryMiMi expected, NextCategoryMiMi actual) {
        assertNextCategoryMiMiAutoGeneratedPropertiesEquals(expected, actual);
        assertNextCategoryMiMiAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryMiMiAllUpdatablePropertiesEquals(NextCategoryMiMi expected, NextCategoryMiMi actual) {
        assertNextCategoryMiMiUpdatableFieldsEquals(expected, actual);
        assertNextCategoryMiMiUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryMiMiAutoGeneratedPropertiesEquals(NextCategoryMiMi expected, NextCategoryMiMi actual) {
        assertThat(expected)
            .as("Verify NextCategoryMiMi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryMiMiUpdatableFieldsEquals(NextCategoryMiMi expected, NextCategoryMiMi actual) {
        assertThat(expected)
            .as("Verify NextCategoryMiMi relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNextCategoryMiMiUpdatableRelationshipsEquals(NextCategoryMiMi expected, NextCategoryMiMi actual) {
        assertThat(expected)
            .as("Verify NextCategoryMiMi relationships")
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
