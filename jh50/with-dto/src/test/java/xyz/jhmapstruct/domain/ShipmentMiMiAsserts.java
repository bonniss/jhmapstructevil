package xyz.jhmapstruct.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShipmentMiMiAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentMiMiAllPropertiesEquals(ShipmentMiMi expected, ShipmentMiMi actual) {
        assertShipmentMiMiAutoGeneratedPropertiesEquals(expected, actual);
        assertShipmentMiMiAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentMiMiAllUpdatablePropertiesEquals(ShipmentMiMi expected, ShipmentMiMi actual) {
        assertShipmentMiMiUpdatableFieldsEquals(expected, actual);
        assertShipmentMiMiUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentMiMiAutoGeneratedPropertiesEquals(ShipmentMiMi expected, ShipmentMiMi actual) {
        assertThat(expected)
            .as("Verify ShipmentMiMi auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentMiMiUpdatableFieldsEquals(ShipmentMiMi expected, ShipmentMiMi actual) {
        assertThat(expected)
            .as("Verify ShipmentMiMi relevant properties")
            .satisfies(e -> assertThat(e.getTrackingNumber()).as("check trackingNumber").isEqualTo(actual.getTrackingNumber()))
            .satisfies(e -> assertThat(e.getShippedDate()).as("check shippedDate").isEqualTo(actual.getShippedDate()))
            .satisfies(e -> assertThat(e.getDeliveryDate()).as("check deliveryDate").isEqualTo(actual.getDeliveryDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentMiMiUpdatableRelationshipsEquals(ShipmentMiMi expected, ShipmentMiMi actual) {
        // empty method
    }
}
