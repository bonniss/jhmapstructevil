package ai.realworld.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlPacinoAndreiRightHandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandAllPropertiesEquals(AlPacinoAndreiRightHand expected, AlPacinoAndreiRightHand actual) {
        assertAlPacinoAndreiRightHandAutoGeneratedPropertiesEquals(expected, actual);
        assertAlPacinoAndreiRightHandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandAllUpdatablePropertiesEquals(
        AlPacinoAndreiRightHand expected,
        AlPacinoAndreiRightHand actual
    ) {
        assertAlPacinoAndreiRightHandUpdatableFieldsEquals(expected, actual);
        assertAlPacinoAndreiRightHandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandAutoGeneratedPropertiesEquals(
        AlPacinoAndreiRightHand expected,
        AlPacinoAndreiRightHand actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHand auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandUpdatableFieldsEquals(
        AlPacinoAndreiRightHand expected,
        AlPacinoAndreiRightHand actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHand relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getIsDefault()).as("check isDefault").isEqualTo(actual.getIsDefault()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlPacinoAndreiRightHandUpdatableRelationshipsEquals(
        AlPacinoAndreiRightHand expected,
        AlPacinoAndreiRightHand actual
    ) {
        assertThat(expected)
            .as("Verify AlPacinoAndreiRightHand relationships")
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()));
    }
}
